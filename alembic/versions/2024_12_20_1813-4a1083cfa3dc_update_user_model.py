"""update user model

Revision ID: 4a1083cfa3dc
Revises: deefcea7ae0e
Create Date: 2024-12-20 18:13:10.422797

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "4a1083cfa3dc"
down_revision: Union[str, None] = "deefcea7ae0e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("hashed_password", sa.String(length=1024), nullable=False)
    )
    op.add_column("users", sa.Column("is_active", sa.Boolean(), nullable=False))
    op.add_column("users", sa.Column("is_superuser", sa.Boolean(), nullable=False))
    op.add_column("users", sa.Column("is_verified", sa.Boolean(), nullable=False))
    op.drop_constraint("users_email_key", "users", type_="unique")
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.drop_column("users", "password")
    op.drop_column("users", "active")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("active", sa.BOOLEAN(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "users",
        sa.Column("password", postgresql.BYTEA(), autoincrement=False, nullable=False),
    )
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.create_unique_constraint("users_email_key", "users", ["email"])
    op.drop_column("users", "is_verified")
    op.drop_column("users", "is_superuser")
    op.drop_column("users", "is_active")
    op.drop_column("users", "hashed_password")
    # ### end Alembic commands ###
